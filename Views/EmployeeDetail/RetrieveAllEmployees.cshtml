@* @{
    ViewData["Title"] = "RetrieveAllEmployees";
}

@model List<projet4.Models.EmployeeViewModel>
<h1>Employee List</h1>

<table>
    <thead>
        <tr>
            <th>Employee ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Salary</th>
            <th>Email</th>
            <th>Department ID</th>
            <th>Gender</th>
            <th>Image Path</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in Model)
        {
            <tr>
                <td>@employee.EmployeeId</td>
                <td>@employee.FirstName</td>
                <td>@employee.LastName</td>
                <td>@employee.Salary</td>
                <td>@employee.Email</td>
                <td>@employee.DepartmentId</td>
                <td>@employee.Gender</td>
                <td>@employee.ImagePath</td>
                <td>
                    <a href="@Url.Action("RetrieveById", "EmployeeDetail", new { id = employee.EmployeeId })">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table> *@
@using PagedList.Mvc
@using X.PagedList.Mvc.Core
@* @await Html.PartialAsync("_Pagination", Model) *@

@model PagedList.IPagedList<EmployeeViewModel> 

<h1>Employee Data</h1>

@if (Model.Count > 0)
{
    <table>
        <thead>
            <tr>
                <th>Employee ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <!-- Add more columns as needed -->
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td>@employee.EmployeeId</td>
                    <td>@employee.FirstName</td>
                    <td>@employee.LastName</td>
                    <!-- Add more columns as needed -->
                </tr>
            }
        </tbody>
    </table>

    @* @Html.PagedListPager(Model, page => Url.Action("RetrieveAllEmployees", new { page }), new PagedListRenderOptions { DisplayLinkToFirstPage = true, DisplayLinkToLastPage = true }) *@
     <div class="pagination-container">
   @await Html.PartialAsync("~/Views/_Pagination.cshtml", Model)
</div>


}
else
{
    <p>No employee data available.</p>
}
