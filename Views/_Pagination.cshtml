@using X.PagedList.Mvc

@if (Model.PageCount > 0)
{
    <div class="pagination">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(Model.IsFirstPage ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("RetrieveAllEmployees", new { page = 1 })" aria-label="First">
                        <span aria-hidden="true">First</span>
                    </a>
                </li>
                <li class="page-item @(Model.IsFirstPage ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("RetrieveAllEmployees", new { page = Model.PageNumber - 1 })" aria-label="Previous">
                        <span aria-hidden="true">Previous</span>
                    </a>
                </li>
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("RetrieveAllEmployees", new { page = i })">@i</a>
                    </li>
                }
                <li class="page-item @(Model.IsLastPage ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("RetrieveAllEmployees", new { page = Model.PageNumber + 1 })" aria-label="Next">
                        <span aria-hidden="true">Next</span>
                    </a>
                </li>
                <li class="page-item @(Model.IsLastPage ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("RetrieveAllEmployees", new { page = Model.PageCount })" aria-label="Last">
                        <span aria-hidden="true">Last</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
}
